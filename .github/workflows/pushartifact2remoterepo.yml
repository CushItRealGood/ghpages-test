name: Add Artifact to a different Repo

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true

env:
  ARTIFACT_NAME: 'another-artifact.zip'
  ARTIFACT_FOLDER: 'appfolder'
  
jobs:
  download-artifact:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        repository: CushItRealGood/ghpages-test
        ref: main
        token: ${{ secrets.GHCR_TOKEN }}
        
    - name: Download Artifact
      run: |
        tag=${{ github.event.inputs.tag }}
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
        echo "GitHub API response: $response"
        asset_url=$(echo "$response" | jq -r '.assets[] | select(.name == "${{ env.ARTIFACT_NAME }}").browser_download_url')
        echo "Downloading artifact from URL: $asset_url"
        curl -sLJO -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$asset_url"

    - name: Clone external repository and switch to gh-pages branch
      run: |
        git clone https://github.com/CushItRealGood/pages-external
        cd pages-external
        git checkout gh-pages

    - name: Update Github Pages
      working-directory: pages-external
      run: |
        export GITHUB_TOKEN=${{ secrets.GHCR_TOKEN }}
      
        # Set up Git credentials
        git config credential.helper "store --file=.git/credentials"
        echo "https://github.com:${GITHUB_TOKEN}@github.com" > .git/credentials

        # Create a new branch
        git checkout gh-pages

        # Copy files from the repository (you might need to adjust the source directory)
        mkdir -p artifacts/${{ env.ARTIFACT_FOLDER }}/${{ github.event.inputs.tag }}/
        cp -R ${{ env.ARTIFACT_NAME }} ./artifacts/${{ env.ARTIFACT_FOLDER }}/${{ github.event.inputs.tag }}/

        # Add changes to the new branch
        git add .

        # Configure git user info
        git config user.name "cushitrealgood"
        git config user.email "cushitrealgood@noreply.github.com"

        # Commit changes with a meaningful message
        git commit -m "Update from ref: $GITHUB_SHA"

        # Push the changes to the external repository
        git push origin gh-pages

